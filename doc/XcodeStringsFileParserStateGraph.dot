digraph States {
	input[label="", fixedsize="false", width=0, height=0, shape=none];
	SUCCESS[color=darkgreen, fontcolor=darkgreen];
	ERROR[color=red, fontcolor=red];

	input -> wait_string_start;

	wait_string_start -> wait_string_start [label=" \"white\" "];
	wait_string_start -> confirm_prestring_comment_start [label=" / "];
	wait_string_start -> wait_end_string_no_double_quotes [label=" \"alphanum\" "];
	wait_string_start -> wait_end_string [label=" \" "];
	wait_string_start -> ERROR;
	confirm_prestring_comment_start -> wait_end_prestring_star_comment [label=" * "];
	confirm_prestring_comment_start -> wait_end_prestring_slash_comment [label=" / "];
	confirm_prestring_comment_start -> wait_end_string_no_double_quotes [label=" \"alphanum\" "];
	confirm_prestring_comment_start -> wait_separator_token [label=" \"white\" "];
	confirm_prestring_comment_start -> SUCCESS [label=" \"separatorToken\" "];
	confirm_prestring_comment_start -> ERROR;
	wait_end_prestring_star_comment -> confirm_end_prestring_star_comment [label=" * "];
	wait_end_prestring_star_comment -> wait_end_prestring_star_comment;
	confirm_end_prestring_star_comment -> confirm_end_prestring_star_comment [label=" * "];
	confirm_end_prestring_star_comment -> wait_string_start [label=" / "];
	confirm_end_prestring_star_comment -> wait_end_prestring_star_comment;
	wait_end_prestring_slash_comment -> wait_string_start [label=" \\n "];
	wait_end_prestring_slash_comment -> wait_end_prestring_slash_comment;

	wait_end_string_no_double_quotes -> wait_end_string_no_double_quotes [label=" \"alphanum\" "];
	wait_end_string_no_double_quotes -> SUCCESS [label=" \"separatorToken\" "];
	wait_end_string_no_double_quotes -> wait_separator_token [label=" \"white\" "];
	wait_end_string_no_double_quotes -> ERROR;
	wait_end_string -> treat_string_escaped_char [label=" \\ "];
	wait_end_string -> wait_separator_token [label=" \" "];
	wait_end_string -> wait_end_string;
	treat_string_escaped_char -> wait_end_string;

	wait_separator_token -> confirm_poststring_comment_start [label = " / "];
	wait_separator_token -> wait_separator_token [label = " \"white\" "];
	wait_separator_token -> SUCCESS [label = " \"separatorToken\" "];
	wait_separator_token -> ERROR;
	confirm_poststring_comment_start -> wait_end_poststring_star_comment [label=" * "];
	confirm_poststring_comment_start -> wait_end_poststring_slash_comment [label=" / "];
	confirm_poststring_comment_start -> ERROR;
	wait_end_poststring_star_comment -> confirm_end_poststring_star_comment [label=" * "];
	wait_end_poststring_star_comment -> wait_end_poststring_star_comment;
	confirm_end_poststring_star_comment -> confirm_end_poststring_star_comment [label = " * "];
	confirm_end_poststring_star_comment -> wait_separator_token [label = " / "];
	confirm_end_poststring_star_comment -> wait_end_poststring_star_comment;
	wait_end_poststring_slash_comment -> wait_separator_token [label=" \\n "];
	wait_end_poststring_slash_comment -> wait_end_poststring_slash_comment;
/*	{ rank=same; wait_end_string_no_double_quotes; wait_end_string; } */
}
